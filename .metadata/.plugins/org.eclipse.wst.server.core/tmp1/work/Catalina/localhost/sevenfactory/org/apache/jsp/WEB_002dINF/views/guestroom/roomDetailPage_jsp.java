/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-11-09 03:59:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.guestroom;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class roomDetailPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/template/footer.jsp", Long.valueOf(1667795532121L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1654647991285L));
    _jspx_dependants.put("jar:file:/C:/sevenfactory/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/sevenfactory_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <!-- 동적인 페이지 포함 -->\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/template/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("객실소개", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("  <!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"http://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=6f3e6622db3f5814e8e191da89d96838&libraries=services\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".all{\r\n");
      out.write("    display:flex;\r\n");
      out.write("    margin: 50px 20px 20px 300px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info{\r\n");
      out.write("   margin-left: 600px;\r\n");
      out.write("}\r\n");
      out.write(".slider-wrap {\r\n");
      out.write("   flex:1; \r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".productinfo{\r\n");
      out.write("   flex:2;\r\n");
      out.write("   margin:50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".slider-wrap{\r\n");
      out.write("    padding: 10px 0px 10px 80px;\r\n");
      out.write("     overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("ul li{\r\n");
      out.write("   display:inline-block;\r\n");
      out.write("}\r\n");
      out.write("#nav1,#nav2,#nav3{\r\n");
      out.write("   padding:5px 15px;\r\n");
      out.write("    border: 1px solid #333;\r\n");
      out.write("    height:30px;\r\n");
      out.write("    border-bottom: 1px solid #fff;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".nav{\r\n");
      out.write("    margin-left:350px;\r\n");
      out.write("}\r\n");
      out.write("#nav1:hover,#nav2:hover,#nav3:hover{\r\n");
      out.write(" background-color: #fffaf2;\r\n");
      out.write("}\r\n");
      out.write(".roomList_backimg {\r\n");
      out.write("   width: 100%;\r\n");
      out.write("   height: 750px;\r\n");
      out.write("   background-size: cover;\r\n");
      out.write("   background-image: url(\"resources/assets/background_img/hoteldog.png\");\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   color: white;\r\n");
      out.write("   padding-top: 300px;\r\n");
      out.write("}\r\n");
      out.write("#roominfo {\r\n");
      out.write("   width: 300px;\r\n");
      out.write("   padding:30px;\r\n");
      out.write("   margin-left:800px;\r\n");
      out.write("}\r\n");
      out.write("#map{\r\n");
      out.write("   margin-left:700px;\r\n");
      out.write("   }\r\n");
      out.write("h5{\r\n");
      out.write("   margin-left:700px;\r\n");
      out.write("}\r\n");
      out.write("button{\r\n");
      out.write("   width: 120px;\r\n");
      out.write("   height:30px;\r\n");
      out.write("   background-color: #fdf7f4;\r\n");
      out.write("   border:none;\r\n");
      out.write("   cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("#button{\r\n");
      out.write("   cursor: pointer;\r\n");
      out.write("   margin:100px 200px;\r\n");
      out.write("}\r\n");
      out.write("ul{\r\n");
      out.write(" border-bottom:1px solid black;\r\n");
      out.write(" width:1100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- JS -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//뒤로가기로 되돌아 왔을 때 & 문서가 실행될 때\r\n");
      out.write(" $(window).bind(\"pageshow\", function(event){\r\n");
      out.write("    $(\"#info\").css(\"display\", \"inline\"); //#info활성화\r\n");
      out.write("    $(\"#mapshow\").css(\"display\", \"none\");\r\n");
      out.write("   $(\"#qna\").css(\"display\", \"none\");\r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("function info(){\r\n");
      out.write("   $(\"#info\").css(\"display\", \"inline\");//#info활성화\r\n");
      out.write("   $(\"#mapshow\").css(\"display\", \"none\");\r\n");
      out.write("   $(\"#qna\").css(\"display\", \"none\"); \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function qna(){\r\n");
      out.write("   alert(\"Q&A게시판으로 이동합니다.\"); //#QNA활성화\r\n");
      out.write("   $(\"#mapshow\").css(\"display\", \"none\");\r\n");
      out.write("   $(\"#info\").css(\"display\", \"none\"); \r\n");
      out.write("   location.href=\"qnaBoardList\";\r\n");
      out.write("}\r\n");
      out.write("function around(){\r\n");
      out.write("   $(\"#qna\").css(\"display\", \"none\");\r\n");
      out.write("   $(\"#mapshow\").css(\"display\", \"inline\"); //#map활성화\r\n");
      out.write("   $(\"#info\").css(\"display\", \"none\"); \r\n");
      out.write("}\r\n");
      out.write("$(document).ready(function (){\r\n");
      out.write("      $(\"#info\").css(\"display\", \"inline\");//#info활성화\r\n");
      out.write("      $(\"#mapshow\").css(\"display\", \"none\");\r\n");
      out.write("      $(\"#qna\").css(\"display\", \"none\"); \r\n");
      out.write("   });\r\n");
      out.write("\r\n");
      out.write("//예약하기페이지로 이동\r\n");
      out.write("function goreservation(){\r\n");
      out.write("   location.href=\"reser?hNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.hNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&gNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&rCheckIn=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rCheckIn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&rCheckOut=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rCheckOut}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&mId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginDTO.mId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"   \r\n");
      out.write("}\r\n");
      out.write("function gononreservation(){\r\n");
      out.write("	location.href=\"nonmemberreser?hNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.hNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&gNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&rCheckIn=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rCheckIn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&rCheckOut=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rCheckOut}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//되돌아가기(roomlist페이지로 이동)\r\n");
      out.write("function goback(){\r\n");
      out.write("   window.history.back();\r\n");
      out.write("}\r\n");
      out.write("</script> \r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>객실 상세</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"roomList_backimg\"> \r\n");
      out.write("      <h3 id=\"hotelfive\">Together</h3>\r\n");
      out.write("      <h1 id=\"pagetitle\">Preview Rooms</h1>\r\n");
      out.write("   </div>\r\n");
      out.write("   <img id=\"roominfo\" alt=\"roominfo\"\r\n");
      out.write("         src=\"resources/assets/name_img/roominfo_name.png\" /><br />\r\n");
      out.write("   <div class=\"all\">\r\n");
      out.write("   <div class=\"slider-wrap\">\r\n");
      out.write("      <div class=\"cont\"><img src=\"resources/assets/guestroom/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gThumbnail }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".JPG\" style=\"width:500px; height: 300px;\"/></div>\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   </div>\r\n");
      out.write("   <div class=\"productinfo\">\r\n");
      out.write("      <p>상품이름 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("      <p>상품가격 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gPrice }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("      <p>최소인원 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gMinPeople }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" | 최대인원 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gMaxPeople }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("      <div id=\"button\">\r\n");
      out.write("      <input type=\"button\" onclick=\"goback()\" value=\"되돌아가기\" style=\"background-color: #fdf7f4; height: 40px; width:100px;\"/>\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   <div class=\"nav\">\r\n");
      out.write("      <ul id=\"nav_line\">\r\n");
      out.write("      <li id=\"nav1\"onClick=\"info()\">정보</li>\r\n");
      out.write("      <li id=\"nav2\"onClick=\"around()\">호텔 주변 정보</li>\r\n");
      out.write("      <li id=\"nav3\"onClick=\"qna()\">Q&A게시판 바로가기</li>\r\n");
      out.write("      </ul>\r\n");
      out.write("   </div>\r\n");
      out.write("      <div class=\"infoall\">\r\n");
      out.write("      ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   </div>\r\n");
      out.write("   <div id=\"mapshow\" style=\"width:500px;height:400px;\">\r\n");
      out.write("   <h5>숙소주변의 맛집을 지도로 확인하세요</h5>\r\n");
      out.write("   <div id=\"map\" style=\"width:500px;height:400px;\"></div>\r\n");
      out.write("   </div>\r\n");
      out.write("   <script>\r\n");
      out.write("      \r\n");
      out.write("   // 이미지 지도에 표시할 마커입니다\r\n");
      out.write("   // 이미지 지도에 표시할 마커를 아래와 같이 배열로 넣어주면 여러개의 마커를 표시할 수 있습니다 \r\n");
      out.write("      var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("      mapOption = { \r\n");
      out.write("              center: new kakao.maps.LatLng(36.349268551597966 , 127.37767658950676), // 지도의 중심좌표\r\n");
      out.write("              level: 7// 지도의 확대 레벨\r\n");
      out.write("          };\r\n");
      out.write("      \r\n");
      out.write("      var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n");
      out.write("      var imageSrc = 'https://ifh.cc/g/Gvw26t.png', // 마커이미지의 주소입니다\r\n");
      out.write("      //var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png', // 마커이미지의 주소입니다    \r\n");
      out.write("       imageSize = new kakao.maps.Size(30, 30), // 마커이미지의 크기입니다\r\n");
      out.write("       //imageOption = {offset: new kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n");
      out.write("       imageOption = {offset: new kakao.maps.Point(10, 10)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n");
      out.write("         \r\n");
      out.write("      \r\n");
      out.write("      // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다\r\n");
      out.write("      var mapTypeControl = new kakao.maps.MapTypeControl();\r\n");
      out.write("\r\n");
      out.write("      // 지도에 컨트롤을 추가해야 지도위에 표시됩니다\r\n");
      out.write("      // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다\r\n");
      out.write("      map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\r\n");
      out.write("\r\n");
      out.write("      // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\r\n");
      out.write("      var zoomControl = new kakao.maps.ZoomControl();\r\n");
      out.write("      map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n");
      out.write("      \r\n");
      out.write("      /* // 마커가 표시될 위치입니다 \r\n");
      out.write("      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n");
      out.write("      var markerPosition  = new kakao.maps.LatLng(36.349268551597966 , 127.37767658950676); \r\n");
      out.write("      \r\n");
      out.write("      // 마커를 생성합니다\r\n");
      out.write("      var marker = new kakao.maps.Marker({\r\n");
      out.write("          position: markerPosition,\r\n");
      out.write("          image: markerImage\r\n");
      out.write("      });\r\n");
      out.write("       */\r\n");
      out.write("      \r\n");
      out.write("      //주소를 통한 마커 \r\n");
      out.write("      var geocoder = new kakao.maps.services.Geocoder();\r\n");
      out.write("      //주소 변수설정 \r\n");
      out.write("      var hAddress =  document.getElementById(\"hAddress\").value;\r\n");
      out.write("      var haroundfood = hAddress.substr(3,4);\r\n");
      out.write("      console.log(\"hAddress::\"+hAddress);\r\n");
      out.write("      console.log(\"haroundfood::\"+haroundfood);\r\n");
      out.write("      // 주소로 좌표를 검색합니다\r\n");
      out.write("      geocoder.addressSearch(hAddress, function(result, status) {\r\n");
      out.write("      \r\n");
      out.write("          // 정상적으로 검색이 완료됐으면 \r\n");
      out.write("           if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n");
      out.write("\r\n");
      out.write("              // 결과값으로 받은 위치를 마커로 표시합니다\r\n");
      out.write("              var marker = new kakao.maps.Marker({\r\n");
      out.write("                  map: map,\r\n");
      out.write("                  position: coords\r\n");
      out.write("              });\r\n");
      out.write("\r\n");
      out.write("              // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n");
      out.write("              var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("                  content: '<div style=\"width:150px;text-align:center;padding:2px;\">호텔위치</div>'\r\n");
      out.write("              });\r\n");
      out.write("              infowindow.open(map, marker);\r\n");
      out.write("\r\n");
      out.write("              // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n");
      out.write("             map.setCenter(coords); \r\n");
      out.write("              \r\n");
      out.write("          } \r\n");
      out.write("      });    \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      //숙소 주변 맛집\r\n");
      out.write("      // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\r\n");
      out.write("      var infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      // 장소 검색 객체를 생성합니다\r\n");
      out.write("      var ps = new kakao.maps.services.Places(); \r\n");
      out.write("      \r\n");
      out.write("      // 키워드로 장소를 검색합니다\r\n");
      out.write("      ps.keywordSearch(haroundfood+'맛집', placesSearchCB); \r\n");
      out.write("      \r\n");
      out.write("      // 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n");
      out.write("      function placesSearchCB (data, status, pagination) {\r\n");
      out.write("          if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("      \r\n");
      out.write("              // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("              // LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("              var bounds = new kakao.maps.LatLngBounds();\r\n");
      out.write("      \r\n");
      out.write("              for (var i=0; i<data.length; i++) {\r\n");
      out.write("                  displayMarker(data[i]);    \r\n");
      out.write("                  bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n");
      out.write("              }       \r\n");
      out.write("      \r\n");
      out.write("          } \r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      // 지도에 마커를 표시하는 함수입니다\r\n");
      out.write("      function displayMarker(place) {\r\n");
      out.write("          // 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("          var marker = new kakao.maps.Marker({\r\n");
      out.write("              map: map,\r\n");
      out.write("              position: new kakao.maps.LatLng(place.y, place.x) \r\n");
      out.write("          });\r\n");
      out.write("          marker.setRange(100);\r\n");
      out.write("      \r\n");
      out.write("          // 마커에 클릭이벤트를 등록합니다\r\n");
      out.write("          kakao.maps.event.addListener(marker, 'click', function() {\r\n");
      out.write("              // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n");
      out.write("              infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n");
      out.write("              infowindow.open(map, marker);\r\n");
      out.write("          });\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("    $('.slider-wrap').slick({\r\n");
      out.write("      slide: 'div',        //슬라이드 되어야 할 태그\r\n");
      out.write("      infinite : true,     //무한 반복 옵션     \r\n");
      out.write("      slidesToShow : 1,        // 한 화면에 보여질 컨텐츠 개수\r\n");
      out.write("      slidesToScroll : 1,        //스크롤 한번에 움직일 컨텐츠 개수\r\n");
      out.write("      speed : 500,     // 다음 버튼 누르고 다음 화면 뜨는데까지 걸리는 시간(ms)\r\n");
      out.write("      arrows : true,         // 옆으로 이동하는 화살표 표시 여부\r\n");
      out.write("      dots : false,         // 스크롤바 아래 점으로 페이지네이션 여부\r\n");
      out.write("      autoplay : true,            // 자동 스크롤 사용 여부\r\n");
      out.write("      autoplaySpeed : 1500,         // 자동 스크롤 시 다음으로 넘어가는데 걸리는 시간 (ms)\r\n");
      out.write("      pauseOnHover : true,        // 슬라이드 이동 시 마우스 호버하면 슬라이더 멈추게 설정\r\n");
      out.write("      vertical : false,        // 세로 방향 슬라이드 옵션\r\n");
      out.write("      prevArrow : \"<button type='button' class='slick-prev'>이전 이미지</button>\",\r\n");
      out.write("      nextArrow : \"<button type='button' class='slick-next'>다음 이미지</button>\",\r\n");
      out.write("      draggable : true   //드래그 가능 여부 \r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("  <!-- 정적인 페이지 포함 -->\r\n");
      out.write("   ");
      out.write("\n");
      out.write("<style>\n");
      out.write(".fa-2x {\n");
      out.write("	font-size: 13px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("	src=\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=wkmpm92bc1&submodules=geocoder\">\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("<div>\n");
      out.write("	<div class=\"footer\">\n");
      out.write("		<ul class=\"footer_menu\">\n");
      out.write("			<li>이용약관</li>\n");
      out.write("			<li>개인정보보호정책</li>\n");
      out.write("			<li>이메일 무단 수집 금지</li>\n");
      out.write("			<li>영상정보처리기기 설치 및 운영방침</li>\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("		</ul>\n");
      out.write("		<ul class=\"company_info\">\n");
      out.write("			<li>우편번호 : 24901</li>\n");
      out.write("			<li>주소 : 대전광역시 서구 대덕대로 182 오라클빌딩 10층</li>\n");
      out.write("			<li>전화번호 : 02-313-7300</li>\n");
      out.write("			<li>팩스번호 : 02-313-0516</li>\n");
      out.write("			<li>이메일 : admin@sevenfactory.com</li>\n");
      out.write("		</ul>\n");
      out.write("		<ul class=\"company_info\">\n");
      out.write("			<li>사업체명 : sevenfactory</li>\n");
      out.write("			<li>대표자 : 강현 김승현 송인재 송지섭</li>\n");
      out.write("			<li>사업자등록번호 : 325-88-00678</li>\n");
      out.write("			<li>통신판매신고번호 : 2022-대전둔산-03148호</li>\n");
      out.write("		</ul>\n");
      out.write("		<p>Copyright © 2022 OsjMesiJJe inc. All rights reserved.</p>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(152,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("size");
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(152,6) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/guestroom/roomDetailPage.jsp(152,6) '${gDTO.gImgCount}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${gDTO.gImgCount}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(153,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("i");
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(153,6) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(1);
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(153,6) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${size}", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("      <div class=\"cont\"><img src=\"resources/assets/guestroom/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gThumbnail }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('_');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(".JPG\" style=\"width:500px; height: 300px;\"/></div>\r\n");
            out.write("      ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(163,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginDTO eq null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      <input type=\"button\" onClick=\"gononreservation()\" value=\"예약하기\" style=\"background-color: #fdf7f4; height: 40px; width:100px;\"/>\r\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(166,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginDTO ne null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("      <input type=\"button\" onClick=\"goreservation()\" value=\"예약하기\" style=\"background-color: #fdf7f4; height: 40px; width:100px;\"/>\r\n");
          out.write("      ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(180,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("hDTO");
      // /WEB-INF/views/guestroom/roomDetailPage.jsp(180,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/guestroom/roomDetailPage.jsp(180,6) '${list }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("      <ul id=\"info\">\r\n");
            out.write("      <li >\r\n");
            out.write("      <br>\r\n");
            out.write("      <img src=\"resources/assets/hotel_img/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hDTO.hThumbnail }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(".png\" alt=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hDTO.hName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"width:600px;\"/><br/>\r\n");
            out.write("      호텔주소 - ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hDTO.hAddress }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" <br/>\r\n");
            out.write("      호텔전화번호 - ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gTel }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<br/>\r\n");
            out.write("      객실정보 - ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gExplain }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<br/>\r\n");
            out.write("      객실사이즈 - ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${gDTO.gRoomSize }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("평형<br/>\r\n");
            out.write("      \r\n");
            out.write("      </li>\r\n");
            out.write("      <li id=\"qna\"></li>\r\n");
            out.write("      </ul>\r\n");
            out.write("      <input type=\"hidden\" id=\"hAddress\" value=\" ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hDTO.hAddress }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"/>\r\n");
            out.write("      ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/template/footer.jsp(22,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginDTO eq null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("				<a id=\"loginout\" href=\"sellerLoginform\"><i\n");
          out.write("					class=\"fas fa-sign-in-alt fa-2x\">사업자LOGIN</i></a>\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
