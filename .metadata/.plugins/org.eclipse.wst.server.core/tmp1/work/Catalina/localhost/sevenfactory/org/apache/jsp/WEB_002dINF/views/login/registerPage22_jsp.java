/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-11-08 08:58:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registerPage22_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/template/footer.jsp", Long.valueOf(1667795532121L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1654647991285L));
    _jspx_dependants.put("jar:file:/C:/sevenfactory/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/sevenfactory_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

request.setCharacterEncoding("utf-8");

      out.write("    \n");
      out.write("\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<!-- 동적인 페이지 포함 -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/template/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("회원가입", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	\n");
      out.write("		var authKey =  \"\";\n");
      out.write("		var idFlag = false;\n");
      out.write("		var pwFlag = false;\n");
      out.write("		var pw2Flag = false;\n");
      out.write("		var nameFlag = false;\n");
      out.write("		var birthFlag = false;\n");
      out.write("		var authFlag = false;\n");
      out.write("		var phoneFlag = false;\n");
      out.write("		var addrFlag = false; \n");
      out.write("		\n");
      out.write("		\n");
      out.write("		function sample6_execDaumPostcode() {\n");
      out.write("		    new daum.Postcode({\n");
      out.write("		        oncomplete: function(data) {\n");
      out.write("		            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\n");
      out.write("		            // 각 주소의 노출 규칙에 따라 주소를 조합한다.\n");
      out.write("		            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\n");
      out.write("		            var mAddr1 = $('#mAddr1'); // 주소 변수\n");
      out.write("		            var mAddr3 = $('#mAddr3'); // 참고항목 변수\n");
      out.write("		            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\n");
      out.write("		            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\n");
      out.write("		            	mAddr1 = data.roadAddress;\n");
      out.write("		            } else { // 사용자가 지번 주소를 선택했을 경우(J)\n");
      out.write("		            	mAddr1 = data.jibunAddress;\n");
      out.write("		            }\n");
      out.write("		            // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n");
      out.write("		            if(data.userSelectedType === 'R'){\n");
      out.write("		                // 명이 있을 경우 추가한다. (법정리는 제외)\n");
      out.write("		                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n");
      out.write("		                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\n");
      out.write("		                	mAddr3 += data.bname;\n");
      out.write("		                }\n");
      out.write("		                // 건물명이 있고, 공동주택일 경우 추가한다.\n");
      out.write("		                if(data.buildingName !== '' && data.apartment === 'Y'){\n");
      out.write("		                	mAddr3 += (mAddr3 !== '' ? ', ' + data.buildingName : data.buildingName);\n");
      out.write("		                }\n");
      out.write("		                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n");
      out.write("		                if(mAddr3 !== ''){\n");
      out.write("		                	mAddr3 = ' (' + mAddr3 + ')';\n");
      out.write("		                }\n");
      out.write("		                // 조합된 참고항목을 해당 필드에 넣는다.\n");
      out.write("		                document.getElementById(\"mAddr3\").value = mAddr3;\n");
      out.write("		            \n");
      out.write("		            } else {\n");
      out.write("		                document.getElementById(\"mAddr3\").value = '';\n");
      out.write("		            }\n");
      out.write("		            // 우편번호와 주소 정보를 해당 필드에 넣는다.\n");
      out.write("		            document.getElementById('mZipcode').value = data.zonecode;\n");
      out.write("		            document.getElementById(\"mAddr1\").value = mAddr1;\n");
      out.write("		            // 커서를 상세주소 필드로 이동한다.\n");
      out.write("		            document.getElementById(\"mAddr2\").focus();\n");
      out.write("		        }\n");
      out.write("		    }).open();\n");
      out.write("		}	\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	$(document).ready(function(){\n");
      out.write("		\n");
      out.write("		// 1. 아이디 중복 체크\n");
      out.write("		//    5 ~ 20 사이의 소문자나 숫자를 사용한다. 첫 글자는 소문자이다.\n");
      out.write("		var regExpID = /^[a-z][a-z0-9]{4,19}$/;  // 첫 글자는 소문자이다.(^[a-z])\n");
      out.write("		$('#mId').keyup(function(){\n");
      out.write("			$.ajax({\n");
      out.write("				url: 'idCheck',\n");
      out.write("				type: 'POST',\n");
      out.write("				dataType: 'JSON',\n");
      out.write("				data: 'mId=' + $('#mId').val(),\n");
      out.write("				success: function( responseObject ) {\n");
      out.write("					// 정규식 test()\n");
      out.write("					if ( regExpID.test($('#mId').val()) ) {  // 정규식을 만족하면,\n");
      out.write("						// 가입된 아이디인지 여부 확인\n");
      out.write("						if ( responseObject.result == 'NO' ) {\n");
      out.write("							$('#idCheckResult').text('이미 가입된 아이디입니다.');\n");
      out.write("							$('#idCheckResult').css('color', 'red');\n");
      out.write("							idFlag = false;\n");
      out.write("						} else {\n");
      out.write("							$('#idCheckResult').text('사용할 수 있는 아이디입니다.');\n");
      out.write("							$('#idCheckResult').css('color', 'blue').css('font-weight', 'bold');\n");
      out.write("							idFlag = true;\n");
      out.write("						}\n");
      out.write("					} else {  // 정규식을 만족하지 않으면\n");
      out.write("						$('#idCheckResult').text('5~20자, 소문자시작, 소문자+숫자 가능');\n");
      out.write("						$('#idCheckResult').css('color', 'red');\n");
      out.write("						idFlag = false;\n");
      out.write("					}\n");
      out.write("				},\n");
      out.write("				error: function() {\n");
      out.write("					alert('AJAX 통신이 실패했습니다.');\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		// 2. 비밀번호 체크\n");
      out.write("		//    8 ~ 20 사이의 소문자, 숫자, 특수문자(~!@#$%^&*)를 사용한다.\n");
      out.write("		//    각각 1개 이상 포함해야 한다.\n");
      out.write("		var regExpPW = /^(?=.*[a-z])(?=.*[0-9])(?=.*[~!@#$%^&*])[a-z0-9~!@#$%^&*]{4,20}$/;\n");
      out.write("		// var regExpPW = /^(?=.*[a-z])(?=.*[0-9])(?=.*[~!@#$%^&*])[A-Za-z0-9~!@#$%^&*]{4,20}$/;\n");
      out.write("		$('#mPw').keyup(function() {\n");
      out.write("			if ( regExpPW.test($('#mPw').val()) ) {\n");
      out.write("				$('#pwCheckResult').text('비밀번호 사용 가능합니다.');\n");
      out.write("				$('#pwCheckResult').css('color', 'blue').css('font-weight', 'bold');\n");
      out.write("				pwFlag = true;\n");
      out.write("			} else {\n");
      out.write("				$('#pwCheckResult').text('4~20자, 소문자, 숫자, 특수문자(~!@#$%^&*) 포함');\n");
      out.write("				$('#pwCheckResult').css('color', 'red');\n");
      out.write("				pwFlag = false;\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		$('#mPw2').keyup(function() {\n");
      out.write("			if ( $('#mPw').val() != $('#mPw2').val()) {\n");
      out.write("				$('#pwConfirmResult').text('비밀번호가 일치하지 않습니다.');\n");
      out.write("				$('#pwConfirmResult').css('color', 'red');\n");
      out.write("				pw2Flag = false;\n");
      out.write("			} else {\n");
      out.write("				$('#pwConfirmResult').text('비밀번호가 일치합니다.');\n");
      out.write("				$('#pwConfirmResult').css('color', 'blue').css('font-weight', 'bold');\n");
      out.write("				pw2Flag = true;\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		// 3_1. 생년월일\n");
      out.write("		\n");
      out.write("		var regExpBirth = /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/;\n");
      out.write("		\n");
      out.write("		$('#mBirth').keyup(function(){\n");
      out.write("				if ( regExpBirth.test($('#mBirth').val()) ) {\n");
      out.write("					$('#BirthCheckResult').text('형식에 맞는 생년월일입니다.');\n");
      out.write("					$('#BirthCheckResult').css('color', 'blue').css('font-weight', 'bold');\n");
      out.write("					birthFlag = true;\n");
      out.write("				} else {\n");
      out.write("					$('#BirthCheckResult').text('잘못된 형식의 생년월일입니다.');\n");
      out.write("					$('#BirthCheckResult').css('color', 'red');\n");
      out.write("					birthFlag = false;\n");
      out.write("				}\n");
      out.write("		});\n");
      out.write("		// 3. 이메일\n");
      out.write("		\n");
      out.write("		var regExpEMAIL = /^[a-z][a-z0-9\\-\\_]+@[A-Za-z0-9]{3,}(\\.[A-Za-z]{2,6}){1,2}$/;\n");
      out.write("		\n");
      out.write("		$('#mEmail').keyup(function() {\n");
      out.write("			$.ajax({\n");
      out.write("				url: 'emailCheck',\n");
      out.write("				type: 'POST',\n");
      out.write("				dataType: 'JSON',\n");
      out.write("				data: 'mEmail=' + $('#mEmail').val(),\n");
      out.write("				success: function( responseObject ) {\n");
      out.write("					// 정규식 test()\n");
      out.write("					if ( regExpEMAIL.test($('#mEmail').val()) ) {\n");
      out.write("						// 가입된 이메일 여부 확인\n");
      out.write("						if ( responseObject.result == 'NO' ) {\n");
      out.write("							$('#emailCheckResult').text('이미 가입된 이메일입니다.');\n");
      out.write("							$('#emailCheckResult').css('color', 'red');\n");
      out.write("							authFlag = false;\n");
      out.write("						} else {\n");
      out.write("							$('#emailCheckResult').text('사용할 수 있는 이메일입니다.');\n");
      out.write("							$('#emailCheckResult').css('color', 'blue').css('font-weight', 'bold');\n");
      out.write("							authFlag = true;\n");
      out.write("						}\n");
      out.write("					} else {  // 정규식을 만족하지 않으면\n");
      out.write("						$('#emailCheckResult').text('올바른 이메일 형식이 아닙니다.');\n");
      out.write("						$('#emailCheckResult').css('color', 'red');\n");
      out.write("						authFlag = false;\n");
      out.write("					}\n");
      out.write("				},\n");
      out.write("				error: function() {\n");
      out.write("					alert('AJAX 통신이 실패했습니다.');\n");
      out.write("				}\n");
      out.write("			});\n");
      out.write("			\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		// 4. 전화번호(핸드폰)\n");
      out.write("	      var regExpPHONE = /^01[0|1|6|9][0-9]{3,4}[0-9]{4}$/;\n");
      out.write("	      \n");
      out.write("	      $('#mPhone').keyup(function(){\n");
      out.write("	         $.ajax({\n");
      out.write("	            url: 'phoneCheck',\n");
      out.write("	            type: 'POST',\n");
      out.write("	            dataType: 'JSON',\n");
      out.write("	            data: 'mPhone=' + $('#mPhone').val(),\n");
      out.write("	            success: function( responseObject ) {\n");
      out.write("	               // 정규식 test()\n");
      out.write("	               if ( regExpPHONE.test($('#mPhone').val()) ) {  // 정규식을 만족하면,\n");
      out.write("	                  // 가입된 아이디인지 여부 확인\n");
      out.write("	                  if ( responseObject.result == 'NO' ) {\n");
      out.write("	                     $('#phoneCheckResult').text('이미 가입된 전화번호입니다.');\n");
      out.write("	                     $('#phoneCheckResult').css('color', 'red');\n");
      out.write("	                     phoneFlag = false;\n");
      out.write("	                  } else {\n");
      out.write("	                     $('#phoneCheckResult').text('사용할 수 있는 전화번호입니다.');\n");
      out.write("	                     $('#phoneCheckResult').css('color', 'blue').css('font-weight', 'bold');\n");
      out.write("	                     phoneFlag = true;\n");
      out.write("	                  }\n");
      out.write("	               } else {  // 정규식을 만족하지 않으면\n");
      out.write("	                  $('#phoneCheckResult').text('11자 사이의 숫자입니다.');\n");
      out.write("	                  $('#phoneCheckResult').css('color', 'red');\n");
      out.write("	                  phoneFlag = false;\n");
      out.write("	               }\n");
      out.write("	            },\n");
      out.write("	            error: function() {\n");
      out.write("	               alert('AJAX 통신이 실패했습니다.');\n");
      out.write("	            }\n");
      out.write("	         });\n");
      out.write("	      });\n");
      out.write("		\n");
      out.write("		// 5. 회원가입\n");
      out.write("		$('#signUpBtn').click(function(){\n");
      out.write("			\n");
      out.write("			if($('#mName').val() != '' ){\n");
      out.write("				nameFlag = true;\n");
      out.write("			}\n");
      out.write("			if($('#mAddr1').val() != ''){\n");
      out.write("				addrFlag = true;\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			if(idFlag && pwFlag && pw2Flag && nameFlag && birthFlag && authFlag && phoneFlag && addrFlag){\n");
      out.write("				if ($('#authKey').val() == authKey && authKey != \"\") {\n");
      out.write("					register.action='register';\n");
      out.write("					register.submit();\n");
      out.write("				}else {\n");
      out.write("					alert('이메일 인증 번호를 확인하세요.');\n");
      out.write("				}\n");
      out.write("			}else {\n");
      out.write("					if( !idFlag ){\n");
      out.write("						alert('아이디를 입력해주세요.');\n");
      out.write("						$(\"#mId\").focus();\n");
      out.write("					} else if ( !pwFlag) {\n");
      out.write("						alert('비밀번호를 입력해주세요.');\n");
      out.write("						$(\"#mPw\").focus();\n");
      out.write("						$(\"#mPw2\").val('');\n");
      out.write("						$(\"#mPw2\").text('');\n");
      out.write("						$('#pwConfirmResult').text('');\n");
      out.write("						pw2Flag = false; \n");
      out.write("					} else if ( !pw2Flag) {\n");
      out.write("						alert('비밀번호를 확인해주세요.');\n");
      out.write("						$(\"#mPw2\").focus();\n");
      out.write("					} else if ( !nameFlag) {\n");
      out.write("						alert('이름을 입력해주세요.');\n");
      out.write("						$(\"#mName\").focus();\n");
      out.write("					}else if ( !birthFlag) {\n");
      out.write("						alert('생일을 입력해주세요.');\n");
      out.write("						$(\"#mBirth\").focus();\n");
      out.write("					} else if ( !authFlag) {\n");
      out.write("						alert('이메일 인증을 진행해주세요.');\n");
      out.write("						$(\"#mEmail\").focus();\n");
      out.write("					} else if ( !phoneFlag) {\n");
      out.write("						alert('전화번호를 입력해주세요');\n");
      out.write("						$(\"#mPhone\").focus();\n");
      out.write("					} else if ( !addrFlag) {\n");
      out.write("						alert('주소를 입력해주세요.');\n");
      out.write("						$(\"#mAddr1\").focus();\n");
      out.write("				}			\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		// 6. 입력 초기화\n");
      out.write("		$('#clearBtn').click(function(){\n");
      out.write("			$('input[type=text], input[type=password]').each(function(){\n");
      out.write("				//  각 요소는 each 문 내부에서 $(this) 로 호출한다.\n");
      out.write("				$(this).val('');\n");
      out.write("			});\n");
      out.write("			$('span').each(function(){\n");
      out.write("				$(this).text('');\n");
      out.write("			});\n");
      out.write("			$('#mId').focus();\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		// 7. 이메일 인증\n");
      out.write("		$('#authMailBtn').click(function(){\n");
      out.write("						\n");
      out.write("			$.ajax({\n");
      out.write("					url : 'emailAuth',\n");
      out.write("					type : 'POST',\n");
      out.write("					dataType : 'json',\n");
      out.write("					data : 'mEmail=' + $('#mEmail').val(),\n");
      out.write("					success : function(data) {\n");
      out.write("								alert('인증번호를 발송했습니다.');\n");
      out.write("								authKey = data.authKey;\n");
      out.write("							},\n");
      out.write("					error : function() {\n");
      out.write("								alert('AJAX 통신이 실패했습니다.');\n");
      out.write("							}\n");
      out.write("					});\n");
      out.write("				\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		// step 값에 따라 페이지 변경\n");
      out.write("		$('#agreeBtn').click(function() {\n");
      out.write("			if (!($(\"#agree1\").is(':checked'))) {\n");
      out.write("				alert('약관을 읽어보시고 동의하셔야 됩니다.');\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("			if (!($(\"#agree2\").is(':checked'))) {\n");
      out.write("				alert('개인정보 수집 및 이용에 동의하셔야 됩니다.');\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("			$(\"#page-box-2\").css(\"display\", \"inline\"); //page-box-2 활성화\n");
      out.write("			$(\"#page-box-1\").css(\"display\", \"none\"); //page-box-1 비활성\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		// 전체동의\n");
      out.write("		$('#allCheck').click(function () {\n");
      out.write("		 			\n");
      out.write("		 var all_check_is = $(\"#allCheck\").is(':checked');\n");
      out.write("         	// 전체 동의를 활성화하는 버튼\n");
      out.write("	        if (all_check_is == true) {\n");
      out.write("	            $('#agree1').attr(\"checked\", true);\n");
      out.write("	            $('#agree2').attr(\"checked\", true);\n");
      out.write("	        } else if (all_check_is == false) {\n");
      out.write("	            $('#agree1').attr(\"checked\", false);\n");
      out.write("	            $('#agree2').attr(\"checked\", false);\n");
      out.write("	        }\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("	.sign-up-box {\n");
      out.write("      margin: 30px auto;\n");
      out.write("      padding: 200px 0 30px 0;\n");
      out.write("      text-align: center;\n");
      out.write("   }\n");
      out.write("   .page-box-2 {display: none; }\n");
      out.write("   .page-box-1 #checktable {border: 1px solid lightgray; width: 1208px; margin: auto; text-align: left;border-collapse: collapse; margin-top: 40px;}\n");
      out.write("   .page-box-1 #checktable tr td{font-size: 17px; padding: 15px 20px; font-weight: bold;} \n");
      out.write("   .page-box-1 #checktable tr:nth-of-type(1) td{border-bottom: 2px solid black; color: red;} \n");
      out.write("   .page-box-1 #agreeBtn {margin-top: 20px; padding: 10px; width: 300px; background-color: darkgray; color: white; font-weight: bold; border: none;}\n");
      out.write("   .page-box-1 #agreeBtn:hover {background-color: #353535; outline: none;} \n");
      out.write("   .page-box-1 .termsOfUse {width: 1208px; margin: auto; margin-top: 50px;}\n");
      out.write("   .page-box-1 .termsOfUse textarea {font-size: 12px; text-align: left; padding:0px; padding-top: 20px; margin-bottom: 30px; border: 1px solid lightgray; border-top-color: black; }\n");
      out.write("   .page-box-1 #personalInfo {border-bottom: 1px solid lightgray; border-top: 1px solid black; width: 1208px; border-collapse: collapse; margin-bottom: 40px;}\n");
      out.write("   .page-box-1 #personalInfo tr td, .page-box-1 #personalInfo tr th {border-bottom: 1px solid lightgray; padding: 20px 20px;}\n");
      out.write("   .page-box-1 #personalInfo tr th, .page-box-1 #personalInfo tr td:nth-of-type(1) {background-color: #F2F2F2;}\n");
      out.write("   .page-box-1 > p {font-size: 12px;}\n");
      out.write("   \n");
      out.write("   .page-box-2 .register-box #register-table {width: 800px; padding: 20px 10px;  margin: auto; text-align: center; border-collapse: collapse; background-color: #F2F2F2}\n");
      out.write("   .page-box-2 .register-box #register-table input[type=text], .page-box-2 .register-box #register-table input[type=password] {width: 450px; padding: 7px 10px; border: 1px solid lightgray;  }\n");
      out.write("   .page-box-2 .register-box #register-table input[type=text]:hover, .page-box-2 .register-box #register-table input[type=password]:hover,.page-box-2 .register-box #register-table input[type=text]:focus, .page-box-2 .register-box #register-table input[type=password]:focus {outline: none; border-color: #353535}\n");
      out.write("   .page-box-2 .register-box #register-table td:nth-of-type(1) {font-weight: bold; width: 230px; font-size: 13px; color: #353535;}\n");
      out.write("   .page-box-2 .register-box #register-table td {padding: 10px 20px 10px 70px;text-align: left;}\n");
      out.write("   .page-box-2 .register-box #register-table input[type=button] {width: 190px; padding: 7px 10px; border: none; background-color: #353535; color: white;}\n");
      out.write("   .page-box-2 .register-box #register-table input[type=button]:hover, .page-box-2 .register-box #register-table input[type=button]:focus {outline: none; }\n");
      out.write("   .page-box-2 #signUpBtn, .page-box-2 #clearBtn {width: 190px; padding: 7px 10px; border: none; background-color: darkgray; color:white; margin-top: 30px;}\n");
      out.write("   .page-box-2 #signUpBtn:hover, .page-box-2 #clearBtn:hover, .page-box-2 #signUpBtn:focus, .page-box-2 #clearBtn:focus {outline: none; background-color: #353535;}\n");
      out.write("   \n");
      out.write("   \n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<div class=\"sign-up-box\">\n");
      out.write("	\n");
      out.write("    <form id=\"register\" method=\"POST\" >\n");
      out.write("    	<h3>MEMBERSHIP</h3>\n");
      out.write("    	<!-- page-box-1 -->\n");
      out.write("    	<div class=\"step-box\">\n");
      out.write("    		<div id=\"page-box-1\" class=\"page-box-1\">\n");
      out.write("		    	<img alt=\"step1\" src=\"resources/assets/register_img/step1.jpg\" ><br/>\n");
      out.write("		    	<table id=\"checktable\">\n");
      out.write("		    		<tr>\n");
      out.write("		    			<td><input id=allCheck type=\"checkbox\" name=\"allCheck\"/>&nbsp;<label for=\"allCheck\">전체동의</label></td>\n");
      out.write("		    		</tr>\n");
      out.write("		    		<tr>\n");
      out.write("		    			<td><input type=\"checkbox\" name=\"agree1\" id=\"agree1\"/>&nbsp;<label for=\"agree1\">이용약관</label></td>\n");
      out.write("		    		</tr>\n");
      out.write("		    		<tr>\n");
      out.write("		    			<td><input type=\"checkbox\" name=\"agree2\" id=\"agree2\"/>&nbsp;<label for=\"agree2\">개인정보 수집 및 이용 안내</label></td>\n");
      out.write("		    		</tr>\n");
      out.write("		    	</table>\n");
      out.write("    			<input id=\"agreeBtn\" type=\"button\" value=\"동의하고 가입하기\" /> <br/>\n");
      out.write("    			<!-- 사용약관 -->\n");
      out.write("    			<div class=\"termsOfUse\">\n");
      out.write("	    			<p style=\"float: left; font-weight: bold;\">이용약관</p> <br/>\n");
      out.write("	    			<textarea cols=\"80\" rows=\"10\" readonly style=\"width: 1200px;\">\n");
      out.write("	    				호텔 예약 사이트 「  togeTher 」회원 약관\n");
      out.write("	    				\n");
      out.write("	    				제 1조(목적)\n");
      out.write("	    				이 약관은 세븐 팩토리 회사(전자상거래 사업자)가 운영하는 together(투게더) 몰(이하 \"몰\"이라 한다)에서 제공\n");
      out.write("						하는 인터넷 관련 서비스(이하 \"서비스\"라 한다)를 이용함에 있어 사이버 몰과 이용자의 권리·의\n");
      out.write("						무 및 책임사항을 규정함을 목적으로 합니다.\n");
      out.write("						\n");
      out.write("						 「PC통신, 무선 등을 이용하는 전자상거래에 대해서도 그 성질에 반하지 않는 한 이 약관을 준\n");
      out.write("						용합니다」\n");
      out.write("						\n");
      out.write("						제2조(정의)\n");
      out.write("						①\"몰\" 이란 호텔 파이브 회사가 재화 또는 용역(이하 \"재화등\"이라 함)을 이용자에게 제공하기 위하여 컴\n");
      out.write("						퓨터등 정보통신설비를 이용하여 재화등을 거래할 수 있도록 설정한 가상의 영업장을 말하며, \n");
      out.write("						아울러 사이버몰을 운영하는 사업자의 의미로도 사용합니다.\n");
      out.write("						\n");
      out.write("						②\"이용자\"란 \"몰\"에 접속하여 이 약관에 따라 \"몰\"이 제공하는 서비스를 받는 회원 및 비회원을 \n");
      out.write("						말합니다.\n");
      out.write("						\n");
      out.write("						③ '회원'이라 함은 \"몰\"에 개인정보를 제공하여 회원등록을 한 자로서, \"몰\"의 정보를 지속적으로 \n");
      out.write("						제공받으며, \"몰\"이 제공하는 서비스를 계속적으로 이용할 수 있는 자를 말합니다.\n");
      out.write("						\n");
      out.write("						④ '비회원'이라 함은 회원에 가입하지 않고 \"몰\"이 제공하는 서비스를 이용하는 자를 말합니다.\n");
      out.write("						\n");
      out.write("						제3조 (약관등의 명시와 설명 및 개정) \n");
      out.write("						① \"몰\"은 이 약관의 내용과 상호 및 대표자 성명, 영업소 소재지 주소(소비자의 불만을 처리할 수 \n");
      out.write("						있는 곳의 주소를 포함), 전화번호·모사전송번호·전자우편주소, 사업자등록번호, 통신판매업신고\n");
      out.write("						번호, 개인정보관리책임자등을 이용자가 쉽게 알 수 있도록 호텔 파이브 몰의 초기 서비스화면(전면)\n");
      out.write("						에 게시합니다. 다만, 약관의 내용은 이용자가 연결화면을 통하여 볼 수 있도록 할 수 있습니다.\n");
      out.write("						\n");
      out.write("						② \"몰은 이용자가 약관에 동의하기에 앞서 약관에 정하여져 있는 내용 중 청약철회·배송책임·\n");
      out.write("						환불조건 등과 같은 중요한 내용을 이용자가 이해할 수 있도록 별도의 연결화면 또는 팝업화면 등\n");
      out.write("						을 제공하여 이용자의 확인을 구하여야 합니다.\n");
      out.write("						\n");
      out.write("						③ \"몰\"은 전자상거래등에서의소비자보호에관한법률, 약관의규제에관한법률, 전자거래기본법, 전자\n");
      out.write("						서명법, 정보통신망이용촉진등에관한법률, 방문판매등에관한법률, 소비자보호법 등 관련법을 위배하\n");
      out.write("						지 않는 범위에서 이 약관을 개정할 수 있습니다.\n");
      out.write("						\n");
      out.write("						④ \"몰\"이 약관을 개정할 경우에는 적용일자 및 개정사유를 명시하여 현행약관과 함께 몰의 초기\n");
      out.write("						화면에 그 적용일자 7일이전부터 적용일자 전일까지 공지합니다.\n");
      out.write("						다만, 이용자에게 불리하게 약관내용을 변경하는 경우에는 최소한 30일 이상의 사전 유예기간을 두\n");
      out.write("						고 공지합니다. 이 경우 \"몰\"은 개정전 내용과 개정후 내용을 명확하게 비교하여 이용자가 알기 쉽\n");
      out.write("						도록 표시합니다. \n");
      out.write("						\n");
      out.write("						⑤ \"몰\"이 약관을 개정할 경우에는 그 개정약관은 그 적용일자 이후에 체결되는 계약에만 적용되\n");
      out.write("						고 그 이전에 이미 체결된 계약에 대해서는 개정전의 약관조항이 그대로 적용됩니다. 다만 이미 계\n");
      out.write("						약을 체결한 이용자가 개정약관 조항의 적용을 받기를 원하는 뜻을 제3항에 의한 개정약관의 공지\n");
      out.write("						기간내에 '몰\"에 송신하여 \"몰\"의 동의를 받은 경우에는 개정약관 조항이 적용됩니다.\n");
      out.write("						\n");
      out.write("						⑥ 이 약관에서 정하지 아니한 사항과 이 약관의 해석에 관하여는 전자상거래등에서의소비자보호\n");
      out.write("						에관한법률, 약관의규제등에관한법률, 공정거래위원회가 정하는 전자상거래등에서의소비자보호지침 \n");
      out.write("						및 관계법령 또는 상관례에 따릅니다.\n");
      out.write("						\n");
      out.write("						제4조(서비스의 제공 및 변경) \n");
      out.write("						① \"몰\"은 다음과 같은 업무를 수행합니다.\n");
      out.write("						1. 재화 또는 용역에 대한 정보 제공 및 구매계약의 체결\n");
      out.write("						2. 구매계약이 체결된 재화 또는 용역의 배송\n");
      out.write("						3. 기타 \"몰\"이 정하는 업무\n");
      out.write("						\n");
      out.write("						②\"몰\"은 재화 또는 용역의 품절 또는 기술적 사양의 변경 등의 경우에는 장차 체결되는 계약에 \n");
      out.write("						의해 제공할 재화 또는 용역의 내용을 변경할 수 있습니다. 이 경우에는 변경된 재화 또는 용역의 \n");
      out.write("						내용 및 제공일자를 명시하여 현재의 재화 또는 용역의 내용을 게시한 곳에 즉시 공지합니다.\n");
      out.write("						\n");
      out.write("						③\"몰\"이 제공하기로 이용자와 계약을 체결한 서비스의 내용을 재화등의 품절 또는 기술적 사양의 \n");
      out.write("						변경 등의 사유로 변경할 경우에는 그 사유를 이용자에게 통지 가능한 주소로 즉시 통지합니다.\n");
      out.write("						\n");
      out.write("						④전항의 경우 \"몰\"은 이로 인하여 이용자가 입은 손해를 배상합니다. 다만, \"몰\"이 고의 또는 과\n");
      out.write("						실이 없음을 입증하는 경우에는 그러하지 아니합니다.\n");
      out.write("						\n");
      out.write("						제5조(서비스의 중단) \n");
      out.write("						① \"몰\"은 컴퓨터 등 정보통신설비의 보수점검·교체 및 고장, 통신의 두절 등의 사유가 발생한 경\n");
      out.write("						우에는 서비스의 제공을 일시적으로 중단할 수 있습니다.\n");
      out.write("						\n");
      out.write("						②\"몰\"은 제1항의 사유로 서비스의 제공이 일시적으로 중단됨으로 인하여 이용자 또는 제3자가 입\n");
      out.write("						은 손해에 대하여 배상합니다. 단, \"몰\"이 고의 또는 과실이 없음을 입증하는 경우에는 그러하지 \n");
      out.write("						아니합니다.\n");
      out.write("						\n");
      out.write("						③사업종목의 전환, 사업의 포기, 업체간의 통합 등의 이유로 서비스를 제공할 수 없게 되는 경우\n");
      out.write("						에는 \"몰\"은 제8조에 정한 방법으로 이용자에게 통지하고 당초 \"몰\"에서 제시한 조건에 따라 소비\n");
      out.write("						자에게 보상합니다. 다만, \"몰\"이 보상기준 등을 고지하지 아니한 경우에는 이용자들의 마일리지 \n");
      out.write("						또는 적립금 등을 \"몰\"에서 통용되는 통화가치에 상응하는 현물 또는 현금으로 이용자에게 지급합\n");
      out.write("						니다.\n");
      out.write("						\n");
      out.write("						제6조(회원가입) \n");
      out.write("						① 이용자는 \"몰\"이 정한 가입 양식에 따라 회원정보를 기입한 후 이 약관에 동의한다는 의사표시\n");
      out.write("						를 함으로서 회원가입을 신청합니다.\n");
      out.write("						\n");
      out.write("						② \"몰\"은 제1항과 같이 회원으로 가입할 것을 신청한 이용자 중 다음 각호에 해당하지 않는 한 \n");
      out.write("						회원으로 등록합니다.\n");
      out.write("						1. 가입신청자가 이 약관 제7조제3항에 의하여 이전에 회원자격을 상실한 적이 있는 경우, 다만 제\n");
      out.write("						7조제3항에 의한 회원자격 상실후 3년이 경과한 자로서 \"몰\"의 회원재가입 승낙을 얻은 경우에는 \n");
      out.write("						예외로 한다.\n");
      out.write("						2. 등록 내용에 허위, 기재누락, 오기가 있는 경우\n");
      out.write("						3. 기타 회원으로 등록하는 것이 \"몰\"의 기술상 현저히 지장이 있다고 판단되는 경우\n");
      out.write("						\n");
      out.write("						③ 회원가입계약의 성립시기는 \"몰\"의 승낙이 회원에게 도달한 시점으로 합니다.\n");
      out.write("						\n");
      out.write("						④ 회원은 제15조제1항에 의한 등록사항에 변경이 있는 경우, 즉시 전자우편 기타 방법으로 \"몰\"에 \n");
      out.write("						대하여 그 변경사항을 알려야 합니다.\n");
      out.write("						\n");
      out.write("						제7조(회원 탈퇴 및 자격 상실 등) \n");
      out.write("						① 회원은 \"몰\"에 언제든지 탈퇴를 요청할 수 있으며 \"몰\"은 즉시 회원탈퇴를 처리합니다.\n");
      out.write("						\n");
      out.write("						② 회원이 다음 각호의 사유에 해당하는 경우, \"몰\"은 회원자격을 제한 및 정지시킬 수 있습니다.\n");
      out.write("						1. 가입 신청시에 허위 내용을 등록한 경우\n");
      out.write("						2. \"몰\"을 이용하여 구입한 재화등의 대금, 기타 \"몰\"이용에 관련하여 회원이 부담하는 채무를 기\n");
      out.write("						일에 지급하지 않는 경우\n");
      out.write("						3. 다른 사람의 \"몰\" 이용을 방해하거나 그 정보를 도용하는 등 전자상거래 질서를 위협하는 경우\n");
      out.write("						4. \"몰\"을 이용하여 법령 또는 이 약관이 금지하거나 공서양속에 반하는 행위를 하는 경우\n");
      out.write("						\n");
      out.write("						③ \"몰\"이 회원 자격을 제한·정지 시킨후, 동일한 행위가 2회이상 반복되거나 30일이내에 그 사유\n");
      out.write("						가 시정되지 아니하는 경우 \"몰\"은 회원자격을 상실시킬 수 있습니다.\n");
      out.write("						\n");
      out.write("						④ \"몰\"이 회원자격을 상실시키는 경우에는 회원등록을 말소합니다. 이 경우 회원에게 이를 통지하\n");
      out.write("						고, 회원등록 말소전에 최소한 30일 이상의 기간을 정하여 소명할 기회를 부여합니다.\n");
      out.write("						\n");
      out.write("						제8조(회원에 대한 통지)\n");
      out.write("						① \"몰\"이 회원에 대한 통지를 하는 경우, 회원이 \"몰\"과 미리 약정하여 지정한 전자우편 주소로 \n");
      out.write("						할 수 있습니다.\n");
      out.write("						\n");
      out.write("						② \"몰\"은 불특정다수 회원에 대한 통지의 경우 1주일이상 \"몰\" 게시판에 게시함으로서 개별 통지\n");
      out.write("						에 갈음할 수 있습니다. 다만, 회원 본인의 거래와 관련하여 중대한 영향을 미치는 사항에 대하여는 \n");
      out.write("						개별통지를 합니다.\n");
      out.write("						\n");
      out.write("						제9조(구매신청)\n");
      out.write("						\"몰\"이용자는 \"몰\"상에서 다음 또는 이와 유사한 방법에 의하여 구매를 신청하며, \"몰\"은 이용자가 \n");
      out.write("						구매신청을 함에 있어서 다음의 각 내용을 알기 쉽게 제공하여야 합니다.  단, 회원인 경우 제2호 \n");
      out.write("						내지 제4호의 적용을 제외할 수 있습니다.\n");
      out.write("						1. 재화등의 검색 및 선택\n");
      out.write("						2. 성명, 주소, 전화번호, 전자우편주소(또는 이동전화번호) 등의 입력\n");
      out.write("						3. 약관내용, 청약철회권이 제한되는 서비스, 배송료·설치비 등의 비용부담과 관련한 내용에 대한 \n");
      out.write("						확인\n");
      out.write("						4. 이 약관에 동의하고 위 3.호의 사항을 확인하거나 거부하는 표시(예, 마우스 클릭)\n");
      out.write("						5. 재화등의 구매신청 및 이에 관한 확인 또는 \"몰\"의 확인에 대한 동의\n");
      out.write("						6. 결제방법의 선택\n");
      out.write("						\n");
      out.write("						제10조 (계약의 성립)\n");
      out.write("						① \"몰\"은 제9조와 같은 구매신청에 대하여 다음 각호에 해당하면 승낙하지 않을 수 있습니다. 다\n");
      out.write("						만, 미성년자와 계약을 체결하는 경우에는 법정대리인의 동의를 얻지 못하면 미성년자 본인 또는 \n");
      out.write("						법정대리인이 계약을 취소할 수 있다는 내용을 고지하여야 합니다.\n");
      out.write("						1. 신청 내용에 허위, 기재누락, 오기가 있는 경우\n");
      out.write("						2. 미성년자가 담배, 주류등 청소년보호법에서 금지하는 재화 및 용역을 구매하는 경우\n");
      out.write("						3. 기타 구매신청에 승낙하는 것이 \"몰\" 기술상 현저히 지장이 있다고 판단하는 경우\n");
      out.write("						\n");
      out.write("						② \"몰\"의 승낙이 제12조제1항의 수신확인통지형태로 이용자에게 도달한 시점에 계약이 성립한 것\n");
      out.write("						으로 봅니다.\n");
      out.write("						\n");
      out.write("						③ \"몰\"의 승낙의 의사표시에는 이용자의 구매 신청에 대한 확인 및 판매가능 여부, 구매신청의 정정 \n");
      out.write("						취소등에 관한 정보등을 포함하여야 합니다.\n");
      out.write("						\n");
      out.write("						제11조(지급방법)\n");
      out.write("						\"몰\"에서 구매한 재화 또는 용역에 대한 대금지급방법은 다음 각호의 방법중 가용한 방법으로 할 \n");
      out.write("						수 있습니다. 단, \"몰\"은 이용자의 지급방법에 대하여 재화 등의 대금에 어떠한 명목의 수수료도  추가\n");
      out.write("						하여 징수할 수 없습니다.\n");
      out.write("						1. 폰뱅킹, 인터넷뱅킹, 메일 뱅킹 등의 각종 계좌이체 \n");
      out.write("						2. 선불카드, 직불카드, 신용카드 등의 각종 카드 결제\n");
      out.write("						3. 온라인무통장입금\n");
      out.write("						4. 전자화폐에 의한 결제\n");
      out.write("						5. 수령시 대금지급\n");
      out.write("						6. 마일리지 등 \"몰\"이 지급한 포인트에 의한 결제\n");
      out.write("						7. \"몰\"과 계약을 맺었거나 \"몰\"이 인정한 상품권에 의한 결제  \n");
      out.write("						8. 기타 전자적 지급 방법에 의한 대금 지급 등\n");
      out.write("						\n");
      out.write("						제12조(수신확인통지·구매신청 변경 및 취소)\n");
      out.write("						① \"몰\"은 이용자의 구매신청이 있는 경우 이용자에게 수신확인통지를 합니다.\n");
      out.write("						\n");
      out.write("						② 수신확인통지를 받은 이용자는 의사표시의 불일치등이 있는 경우에는 수신확인통지를 받은 후 즉시 \n");
      out.write("						구매신청 변경 및 취소를 요청할 수 있고 \"몰\"은 배송전에 이용자의 요청이 있는 경우에는 지체없이 그 \n");
      out.write("						요청에 따라 처리하여야 합니다. 다만 이미 대금을 지불한 경우에는 제15조의 청약철회 등에 관한 규정\n");
      out.write("						에 따릅니다.\n");
      out.write("						\n");
      out.write("						제13조(재화등의 공급)\n");
      out.write("						① \"몰\"은 이용자와 재화등의 공급시기에 관하여 별도의 약정이 없는 이상, 이용자가 청약을 한 날\n");
      out.write("						부터 7일 이내에 재화 등을 배송할 수 있도록 주문제작, 포장 등 기타의 필요한 조치를 취합니다. \n");
      out.write("						다만, \"몰\"이 이미 재화 등의 대금의 전부 또는 일부를 받은 경우에는 대금의 전부 또는 일부를 받\n");
      out.write("						은 날부터 2영업일 이내에 조치를 취합니다.  이때 \"몰\"은 이용자가 재화등의 공급 절차 및 진행 \n");
      out.write("						사항을 확인할 수 있도록 적절한 조치를 합니다.\n");
      out.write("						\n");
      out.write("						②\"몰\"은 이용자가 구매한 재화에 대해 배송수단, 수단별 배송비용 부담자, 수단별 배송기간 등을 \n");
      out.write("						명시합니다. 만약 \"몰\"이 약정 배송기간을 초과한 경우에는 그로 인한 이용자의 손해를 배상하여야 \n");
      out.write("						합니다. 다만 \"몰\"이 고의·과실이 없음을 입증한 경우에는 그러하지 아니합니다.\n");
      out.write("						\n");
      out.write("						\n");
      out.write("						제14조(환급)\n");
      out.write("						\"몰\"은 이용자가 구매신청한 재화등이 품절 등의 사유로 인도 또는 제공을 할 수 없을 때에는 지\n");
      out.write("						체없이 그 사유를 이용자에게 통지하고 사전에 재화 등의 대금을 받은 경우에는 대금을 받은 날부\n");
      out.write("						터 2영업일 이내에 환급하거나 환급에 필요한 조치를 취합니다.\n");
      out.write("						\n");
      out.write("						제15조(청약철회 등)\n");
      out.write("						①\"몰\"과 재화등의 구매에 관한 계약을 체결한 이용자는 수신확인의 통지를 받은 날부터 7일 이내\n");
      out.write("						에는 청약의 철회를 할 수 있습니다.\n");
      out.write("						\n");
      out.write("						② 이용자는 재화등을 배송받은 경우 다음 각호의 1에 해당하는 경우에는 반품 및 교환을 할 수 \n");
      out.write("						없습니다.\n");
      out.write("						1. 이용자에게 책임 있는 사유로 재화 등이 멸실 또는 훼손된 경우(다만, 재화 등의 내용을 확인하\n");
      out.write("						기 위하여 포장 등을 훼손한 경우에는 청약철회를 할 수 있습니다)\n");
      out.write("						2. 이용자의 사용 또는 일부 소비에 의하여 재화 등의 가치가 현저히 감소한 경우\n");
      out.write("						3. 시간의 경과에 의하여 재판매가 곤란할 정도로 재화등의 가치가 현저히 감소한 경우\n");
      out.write("						4. 같은 성능을 지닌 재화등으로 복제가 가능한 경우 그 원본인 재화 등의 포장을 훼손한 경우\n");
      out.write("						\n");
      out.write("						③ 제2항제2호 내지 제4호의 경우에 \"몰\"이 사전에 청약철회 등이 제한되는 사실을 소비자가 쉽게 \n");
      out.write("						알 수 있는 곳에 명기하거나 시용상품을 제공하는 등의 조치를 하지 않았다면 이용자의 청약철회\n");
      out.write("						등이 제한되지 않습니다.\n");
      out.write("						\n");
      out.write("						④ 이용자는 제1항 및 제2항의 규정에 불구하고 재화등의 내용이 표시 광고 내용과 다르거나 계약\n");
      out.write("						내용과 다르게 이행된 때에는 당해 재화등을 공급받은 날부터 3월이내, 그 사실을 안 날 또는 알 \n");
      out.write("						수 있었던 날부터 30일 이내에 청약철회 등을 할 수 있습니다.\n");
      out.write("						\n");
      out.write("						제16조(청약철회 등의 효과)\n");
      out.write("						① \"몰\"은 이용자로부터 재화 등을 반환받은 경우 3영업일 이내에 이미 지급받은 재화등의 대금을 \n");
      out.write("						환급합니다. 이 경우 \"몰\"이 이용자에게 재화등의 환급을 지연한 때에는 그 지연기간에 대하여 공\n");
      out.write("						정거래위원회가 정하여 고시하는 지연이자율을 곱하여 산정한 지연이자를 지급합니다.\n");
      out.write("						\n");
      out.write("						② \"몰\"은 위 대금을 환급함에 있어서 이용자가 신용카드 또는 전자화폐 등의 결제수단으로 재화\n");
      out.write("						등의 대금을 지급한 때에는 지체없이 당해 결제수단을 제공한 사업자로 하여금 재화등의 대금의 \n");
      out.write("						청구를 정지 또는 취소하도록 요청합니다.\n");
      out.write("						\n");
      out.write("						③ 청약철회등의 경우 공급받은 재화등의 반환에 필요한 비용은 이용자가 부담합니다. \"몰\"은 이용\n");
      out.write("						자에게 청약철회등을 이유로 위약금 또는 손해배상을 청구하지 않습니다. 다만 재화등의 내용이 표\n");
      out.write("						시 광고 내용과 다르거나 계약내용과 다르게 이행되어 청약철회등을 하는 경우 재화등의 반환에 \n");
      out.write("						필요한 비용은 \"몰\"이 부담합니다.\n");
      out.write("						\n");
      out.write("						④ 이용자가 재화등을 제공받을때 발송비를 부담한 경우에 \"몰\"은 청약철회시 그 비용을  누가 부담하\n");
      out.write("						는지를 이용자가 알기 쉽도록 명확하게 표시합니다.\n");
      out.write("						\n");
      out.write("						제17조(개인정보보호)\n");
      out.write("						①\"몰\"은 이용자의 정보수집시 구매계약 이행에 필요한 최소한의 정보를 수집합니다. 다음 사항을 \n");
      out.write("						필수사항으로 하며 그 외 사항은 선택사항으로 합니다. \n");
      out.write("						1. 성명\n");
      out.write("						2. 주민등록번호(회원의 경우) 또는 외국인등록번호\n");
      out.write("						3. 주소\n");
      out.write("						4. 전화번호\n");
      out.write("						5. 희망ID(회원의 경우)\n");
      out.write("						6. 비밀번호(회원의 경우)\n");
      out.write("						7. 전자우편주소(또는 이동전화번호)\n");
      out.write("						\n");
      out.write("						② \"몰\"이 이용자의 개인식별이 가능한 개인정보를 수집하는 때에는 반드시 당해 이용자의 동의를 \n");
      out.write("						받습니다.\n");
      out.write("						\n");
      out.write("						③제공된 개인정보는 당해 이용자의 동의없이 목적외의 이용이나 제3자에게 제공할 수 없으며, 이\n");
      out.write("						에 대한 모든 책임은 　몰　이 집니다. 다만, 다음의 경우에는 예외로 합니다.\n");
      out.write("						\n");
      out.write("						1. 배송업무상 배송업체에게 배송에 필요한 최소한의 이용자의 정보(성명, 주소, 전화번호)를 알려\n");
      out.write("						주는 경우\n");
      out.write("						2. 통계작성, 학술연구 또는 시장조사를 위하여 필요한 경우로서 특정 개인을 식별할 수 없는 형태\n");
      out.write("						로 제공하는 경우\n");
      out.write("						3. 재화등의 거래에 따른 대금정산을 위하여 필요한 경우\n");
      out.write("						4. 도용방지를 위하여 본인확인에 필요한 경우\n");
      out.write("						5. 법률의 규정 또는 법률에 의하여 필요한 불가피한 사유가 있는 경우\n");
      out.write("						\n");
      out.write("						④\"몰\"이 제2항과 제3항에 의해 이용자의 동의를 받아야 하는 경우에는 개인정보관리 책임자의 신\n");
      out.write("						원(소속, 성명 및 전화번호, 기타 연락처), 정보의 수집목적 및 이용목적, 제3자에 대한 정보제공 관\n");
      out.write("						련사항(제공받은자, 제공목적 및 제공할 정보의 내용) 등 정보통신망이용촉진등에관한법률 제22조\n");
      out.write("						제2항이 규정한 사항을 미리 명시하거나 고지해야 하며 이용자는 언제든지 이 동의를 철회할 수 \n");
      out.write("						있습니다.\n");
      out.write("						\n");
      out.write("						⑤이용자는 언제든지 \"몰\"이 가지고 있는 자신의 개인정보에 대해 열람 및 오류정정을 요구할 수 \n");
      out.write("						있으며 \"몰\"은 이에 대해 지체없이 필요한 조치를 취할 의무를 집니다. 이용자가 오류의 정정을 요\n");
      out.write("						구한 경우에는 \"몰\"은 그 오류를 정정할 때까지 당해 개인정보를 이용하지 않습니다.\n");
      out.write("						 \n");
      out.write("						⑥ \"몰\"은 개인정보 보호를 위하여 관리자를 한정하여 그 수를 최소화하며 신용카드, 은행계좌 등\n");
      out.write("						을 포함한 이용자의 개인정보의 분실, 도난, 유출, 변조 등으로 인한 이용자의 손해에 대하여 모든 \n");
      out.write("						책임을  집니다.\n");
      out.write("						\n");
      out.write("						⑦ \"몰\" 또는 그로부터 개인정보를 제공받은 제3자는 개인정보의 수집목적 또는 제공받은 목적을 \n");
      out.write("						달성한 때에는 당해 개인정보를 지체없이 파기합니다.\n");
      out.write("						\n");
      out.write("						제18조(\"몰\"의 의무)\n");
      out.write("						① \"몰\"은 법령과 이 약관이 금지하거나 공서양속에 반하는 행위를 하지 않으며 이 약관이 정하는 \n");
      out.write("						바에 따라 지속적이고, 안정적으로 재화·용역을 제공하는데 최선을 다하여야 합니다.\n");
      out.write("						\n");
      out.write("						② \"몰\"은 이용자가 안전하게 인터넷 서비스를 이용할 수 있도록 이용자의 개인정보(신용정보 포\n");
      out.write("						함)보호를 위한 보안 시스템을 갖추어야 합니다.\n");
      out.write("						\n");
      out.write("						③ \"몰\"이 상품이나 용역에 대하여 「표시·광고의공정화에관한법률」 제3조 소정의 부당한 표\n");
      out.write("						시·광고행위를 함으로써 이용자가 손해를 입은 때에는 이를 배상할 책임을 집니다.\n");
      out.write("						\n");
      out.write("						④ \"몰\"은 이용자가 원하지 않는 영리목적의 광고성 전자우편을 발송하지 않습니다.\n");
      out.write("						\n");
      out.write("						제19조(회원의 ID 및 비밀번호에 대한 의무)\n");
      out.write("						① 제17조의 경우를 제외한 ID와 비밀번호에 관한 관리책임은 회원에게 있습니다.\n");
      out.write("						\n");
      out.write("						② 회원은 자신의 ID 및 비밀번호를 제3자에게 이용하게 해서는 안됩니다.\n");
      out.write("						\n");
      out.write("						③ 회원이 자신의 ID 및 비밀번호를 도난당하거나 제3자가 사용하고 있음을 인지한 경우에는 바로 \n");
      out.write("						\"몰\"에 통보하고 \"몰\"의 안내가 있는 경우에는 그에 따라야 합니다.\n");
      out.write("						\n");
      out.write("						제20조(이용자의 의무)\n");
      out.write("						이용자는 다음 행위를 하여서는 안됩니다.\n");
      out.write("						1. 신청 또는 변경시 허위 내용의 등록\n");
      out.write("						2. 타인의 정보 도용\n");
      out.write("						3. \"몰\"에 게시된 정보의 변경\n");
      out.write("						4. \"몰\"이 정한 정보 이외의 정보(컴퓨터 프로그램 등) 등의 송신 또는 게시\n");
      out.write("						5. \"몰\" 기타 제3자의 저작권 등 지적재산권에 대한 침해\n");
      out.write("						6. \"몰\" 기타 제3자의 명예를 손상시키거나 업무를 방해하는 행위\n");
      out.write("						7. 외설 또는 폭력적인 메시지, 화상, 음성, 기타 공서양속에 반하는 정보를 몰에 공개 또는 게시하\n");
      out.write("						는 행위\n");
      out.write("						\n");
      out.write("						제21조(연결\"몰\"과 피연결\"몰\" 간의 관계)\n");
      out.write("						① 상위 \"몰\"과 하위 \"몰\"이 하이퍼 링크(예: 하이퍼 링크의 대상에는 문자, 그림 및 동화상 등이 \n");
      out.write("						포함됨)방식 등으로 연결된 경우, 전자를 연결 \"몰\"(웹 사이트)이라고 하고 후자를 피연결 \"몰\"(웹\n");
      out.write("						사이트)이라고 합니다.\n");
      out.write("						\n");
      out.write("						②연결\"몰\"은 피연결\"몰\"이 독자적으로 제공하는 재화등에 의하여 이용자와 행하는 거래에 대해서 \n");
      out.write("						보증책임을 지지 않는다는 뜻을 연결\"몰\"의 초기화면 또는 연결되는 시점의 팝업화면으로 명시한 \n");
      out.write("						경우에는 그 거래에 대한 보증책임을 지지 않습니다.\n");
      out.write("						\n");
      out.write("						제22조(저작권의 귀속 및 이용제한)\n");
      out.write("						① \"몰\"이 작성한 저작물에 대한 저작권 기타 지적재산권은 \"몰\"에 귀속합니다.\n");
      out.write("						\n");
      out.write("						② 이용자는 \"몰\"을 이용함으로써 얻은 정보 중 \"몰\"에게 지적재산권이 귀속된 정보를 \"몰\"의 사전 \n");
      out.write("						승낙없이 복제, 송신, 출판, 배포, 방송 기타 방법에 의하여 영리목적으로 이용하거나 제3자에게 이\n");
      out.write("						용하게 하여서는 안됩니다.\n");
      out.write("						\n");
      out.write("						③ \"몰\"은 약정에 따라 이용자에게 귀속된 저작권을 사용하는 경우 당해 이용자에게 통보하여야 합니다.\n");
      out.write("						\n");
      out.write("						제23조(분쟁해결)\n");
      out.write("						① \"몰\"은 이용자가 제기하는 정당한 의견이나 불만을 반영하고 그 피해를 보상처리하기 위하여 \n");
      out.write("						피해보상처리기구를 설치·운영합니다.\n");
      out.write("						\n");
      out.write("						② \"몰\"은 이용자로부터 제출되는 불만사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만, 신\n");
      out.write("						속한 처리가 곤란한 경우에는 이용자에게 그 사유와 처리일정을 즉시 통보해 드립니다.\n");
      out.write("						\n");
      out.write("						③\"몰\"과 이용자간에 발생한 전자상거래 분쟁과 관련하여 이용자의 피해구제신청이 있는 경우에는 \n");
      out.write("						공정거래위원회 또는 시 도지사가 의뢰하는 분쟁조정기관의 조정에 따를 수 있습니다.\n");
      out.write("						\n");
      out.write("						제24조(재판권 및 준거법)\n");
      out.write("						①\"몰\"과 이용자간에 발생한 전자상거래 분쟁에 관한 소송은 제소 당시의 이용자의 주소에 의하고, \n");
      out.write("						주소가 없는 경우에는 거소를 관할하는 지방법원의 전속관할로 합니다. 다만, 제소 당시 이용자의 \n");
      out.write("						주소 또는 거소가 분명하지 않거나 외국 거주자의 경우에는 민사소송법상의 관할법원에 제기합니\n");
      out.write("						다.\n");
      out.write("						\n");
      out.write("						②\"몰\"과 이용자간에 제기된 전자상거래 소송에는 한국법을 적용합니다.\n");
      out.write("	    				\n");
      out.write("	    				본 약관은 2020년 7월 21일부터 적용됩니다.\n");
      out.write("	    			</textarea>\n");
      out.write("	    			\n");
      out.write("	    			<p style=\"float: left; font-weight: bold;\">개인정보 수집·이용</p><br/><br/><br/>\n");
      out.write("	    			<table id=\"personalInfo\">\n");
      out.write("	    				<tr>\n");
      out.write("	    					<th>구분</th>\n");
      out.write("	    					<th>목적</th>\n");
      out.write("	    					<th>항목</th>\n");
      out.write("	    				</tr>\n");
      out.write("	    				<tr>\n");
      out.write("	    					<td>필수정보</td>\n");
      out.write("	    					<td>회원제 서비스 이용/ 본인 확인</td>\n");
      out.write("	    					<td>이름, 아이디, 비밀번호, 이메일, 휴대폰, 생일</td>\n");
      out.write("	    				</tr>\n");
      out.write("	    				<tr>\n");
      out.write("	    					<td>선택정보</td>\n");
      out.write("	    					<td>마케팅 활용(이벤트, 맞춤형 광고)</td>\n");
      out.write("	    					<td>휴대폰, 이메일, 쿠키정보</td>\n");
      out.write("	    				</tr>\n");
      out.write("	    			</table>\n");
      out.write("    			</div>\n");
      out.write("    			\n");
      out.write("    			<p>귀하께서는 세븐팩토리에서 위와 같이 수집하는 개인정보에 대해, 동의하지 않거나 개인정보를 기재하지 않음으로써 거부할 수 있습니다.<p>\n");
      out.write("				<p>다만, 이때 회원에게 제공되는 서비스가 제한될 수 있습니다.<p>\n");
      out.write("    			\n");
      out.write("    		</div>\n");
      out.write("    		\n");
      out.write("    		<!-- page-box-2 -> 회원가입창을 제공함 step2의 구현부 -->\n");
      out.write("    		<div id=\"page-box-2\" class=\"page-box-2\">\n");
      out.write("		    	<img alt=\"step2\" src=\"resources/assets/register_img/step2.jpg\" ><br/><br/><br/>\n");
      out.write("				<h5 style=\"font-weight: bold; color: #6E6E6E\">회원 가입</h5>\n");
      out.write("				\n");
      out.write("				<div class=\"register-box\">\n");
      out.write("					<table id=\"register-table\">\n");
      out.write("						<tr>\n");
      out.write("							<td>아이디</td>\n");
      out.write("							<td>\n");
      out.write("								<input id=\"mId\" type=\"text\" name=\"mId\" autocomplete=\"off\" placeholder=\"아이디를 입력해주세요\" /><br/>\n");
      out.write("								<span id=\"idCheckResult\"></span>\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>비밀번호</td>\n");
      out.write("							<td>\n");
      out.write("								<input id=\"mPw\" type=\"password\" name=\"mPw\" placeholder=\"비밀번호를 입력해주세요\" /><br/>\n");
      out.write("								<span id=\"pwCheckResult\"></span>\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>비밀번호 확인</td>\n");
      out.write("							<td>\n");
      out.write("								<input id=\"mPw2\" type=\"password\" name=\"mPw2\" placeholder=\"비밀번호를 확인해주세요\"  /><br/>\n");
      out.write("								<span id=\"pwConfirmResult\"></span><br/>\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>이름</td>\n");
      out.write("							<td><input id=\"mName\" type=\"text\" name=\"mName\" placeholder=\"이름을 입력해주세요\" /><br/></td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>생년월일</td>\n");
      out.write("							<td><input id=\"mBirth\" type=\"text\" name=\"mBirth\" placeholder=\"8자리 ex)2000-01-01\" /><br/>\n");
      out.write("							<span id=\"BirthCheckResult\"></span>\n");
      out.write("							</td>\n");
      out.write("							\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>이메일</td>\n");
      out.write("							<td>\n");
      out.write("								<input id=\"mEmail\" type=\"text\" name=\"mEmail\" style=\"width:250px;\" placeholder=\"이메일을 입력해주세요\"/> \n");
      out.write("								<input id=\"authMailBtn\" type=\"button\" value=\"인증번호 받기\"/><br/>\n");
      out.write("								<span id=\"emailCheckResult\"></span><br/>\n");
      out.write("								<input id=\"authKey\" type=\"text\" name = \"authKey\" placeholder=\"인증번호입력\"/>\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>전화번호</td>\n");
      out.write("							<td>\n");
      out.write("								<input id=\"mPhone\" type=\"text\" name=\"mPhone\" placeholder=\"ex)01000000000\" /><br/>\n");
      out.write("								<span id=\"phoneCheckResult\"></span>\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td>주소</td>\n");
      out.write("							<td>\n");
      out.write("								<input type=\"text\" id=\"mZipcode\" name=\"mZipcode\" placeholder=\"우편번호\" style=\"width:250px;\"/>\n");
      out.write("								<input type=\"button\" onclick=\"sample6_execDaumPostcode()\" value=\"우편번호 찾기\"/><br>\n");
      out.write("								<input type=\"text\" id=\"mAddr1\"  name =\"mAddr1\" placeholder=\"주소\"style=\"width:250px;\"/><br>\n");
      out.write("								<input type=\"text\" id=\"mAddr2\"   name =\"mAddr2\" placeholder=\"상세주소\"style=\"width:250px;\"/>\n");
      out.write("								<input type=\"hidden\" id=\"mAddr3\" name =\"mAddr3\" placeholder=\"참고항목\">\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("					</table>\n");
      out.write("					\n");
      out.write("					\n");
      out.write("				</div>\n");
      out.write("				<input id=\"clearBtn\" type=\"reset\" value=\"입력취소\" /> 		\n");
      out.write("				<input type=\"button\" value=\"회원가입\" id=\"signUpBtn\"  />\n");
      out.write("    		</div>\n");
      out.write("\n");
      out.write("    	</div>\n");
      out.write("    	\n");
      out.write("\n");
      out.write("    	    \n");
      out.write("		 		\n");
      out.write("		\n");
      out.write("	</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".fa-2x {\n");
      out.write("	font-size: 13px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("	src=\"https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=wkmpm92bc1&submodules=geocoder\">\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("<div>\n");
      out.write("	<div class=\"footer\">\n");
      out.write("		<ul class=\"footer_menu\">\n");
      out.write("			<li>이용약관</li>\n");
      out.write("			<li>개인정보보호정책</li>\n");
      out.write("			<li>이메일 무단 수집 금지</li>\n");
      out.write("			<li>영상정보처리기기 설치 및 운영방침</li>\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("		</ul>\n");
      out.write("		<ul class=\"company_info\">\n");
      out.write("			<li>우편번호 : 24901</li>\n");
      out.write("			<li>주소 : 대전광역시 서구 대덕대로 182 오라클빌딩 10층</li>\n");
      out.write("			<li>전화번호 : 02-313-7300</li>\n");
      out.write("			<li>팩스번호 : 02-313-0516</li>\n");
      out.write("			<li>이메일 : admin@sevenfactory.com</li>\n");
      out.write("		</ul>\n");
      out.write("		<ul class=\"company_info\">\n");
      out.write("			<li>사업체명 : sevenfactory</li>\n");
      out.write("			<li>대표자 : 강현 김승현 송인재 송지섭</li>\n");
      out.write("			<li>사업자등록번호 : 325-88-00678</li>\n");
      out.write("			<li>통신판매신고번호 : 2022-대전둔산-03148호</li>\n");
      out.write("		</ul>\n");
      out.write("		<p>Copyright © 2022 OsjMesiJJe inc. All rights reserved.</p>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/template/footer.jsp(22,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginDTO eq null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("				<a id=\"loginout\" href=\"sellerLoginform\"><i\n");
          out.write("					class=\"fas fa-sign-in-alt fa-2x\">사업자LOGIN</i></a>\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
